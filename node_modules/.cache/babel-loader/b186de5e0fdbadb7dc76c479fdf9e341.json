{"ast":null,"code":"var _jsxFileName = \"D:\\\\code\\\\Web\\\\react-tutorial\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Cat from './Cat';\nimport Dog from './Dog';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      catPictureURL: [],\n      dogPictureURL: []\n    };\n  }\n\n  componentDidMount() {\n    this.loadPictures();\n  }\n\n  loadPictures() {\n    fetch('https://aws.random.cat/meow').then(res => res.json()).then(json => {\n      this.setState({\n        catPictureURL: json.file\n      });\n    });\n    let found = false;\n\n    for (let i = 0; i < 10; i++) {\n      if (found) break;\n      fetch('https://random.dog/woof.json').then(res => res.json()).then(json => {\n        var imgType = json.url.substring(json.url.length - 4, json.url.length).toLowerCase();\n\n        if (imgType === \".jpg\" || imgType === \".png\") {\n          this.setState({\n            dogPictureURL: json.url\n          });\n          found = true;\n          console.log(i);\n        }\n      });\n    }\n  }\n\n  render() {\n    var {\n      catPictureURL,\n      dogPictureURL\n    } = this.state;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Cat, {\n      picture: catPictureURL,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(Dog, {\n      picture: dogPictureURL,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 5\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:/code/Web/react-tutorial/src/App.js"],"names":["React","Component","Cat","Dog","App","constructor","props","state","catPictureURL","dogPictureURL","componentDidMount","loadPictures","fetch","then","res","json","setState","file","found","i","imgType","url","substring","length","toLowerCase","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,GAAP,MAAgB,OAAhB;;AAEA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAE3BI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACZC,MAAAA,aAAa,EAAE,EADH;AAEZC,MAAAA,aAAa,EAAE;AAFH,KAAb;AAIA;;AAEDC,EAAAA,iBAAiB,GAAG;AACnB,SAAKC,YAAL;AACA;;AAEDA,EAAAA,YAAY,GAAG;AAEdC,IAAAA,KAAK,CAAC,6BAAD,CAAL,CACEC,IADF,CACOC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADd,EAEEF,IAFF,CAEOE,IAAI,IAAI;AACb,WAAKC,QAAL,CAAc;AACbR,QAAAA,aAAa,EAAEO,IAAI,CAACE;AADP,OAAd;AAGA,KANF;AAQA,QAAIC,KAAK,GAAG,KAAZ;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AAC5B,UAAID,KAAJ,EAAW;AAEXN,MAAAA,KAAK,CAAC,8BAAD,CAAL,CACEC,IADF,CACOC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADd,EAEEF,IAFF,CAEOE,IAAI,IAAI;AACb,YAAIK,OAAO,GAAGL,IAAI,CAACM,GAAL,CAASC,SAAT,CAAmBP,IAAI,CAACM,GAAL,CAASE,MAAT,GAAkB,CAArC,EAAwCR,IAAI,CAACM,GAAL,CAASE,MAAjD,EAAyDC,WAAzD,EAAd;;AACA,YAAIJ,OAAO,KAAK,MAAZ,IAAsBA,OAAO,KAAK,MAAtC,EAA8C;AAC7C,eAAKJ,QAAL,CAAc;AACbP,YAAAA,aAAa,EAAEM,IAAI,CAACM;AADP,WAAd;AAGAH,UAAAA,KAAK,GAAG,IAAR;AACAO,UAAAA,OAAO,CAACC,GAAR,CAAYP,CAAZ;AACA;AACD,OAXF;AAYA;AACD;;AAEDQ,EAAAA,MAAM,GAAG;AACR,QAAI;AAAEnB,MAAAA,aAAF;AAAiBC,MAAAA;AAAjB,QAAmC,KAAKF,KAA5C;AAEA,wBACC,uDACC,oBAAC,GAAD;AAAK,MAAA,OAAO,EAAEC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,eAEC,oBAAC,GAAD;AAAK,MAAA,OAAO,EAAEC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,CADD;AAMA;;AApD0B;;AAwD5B,eAAeL,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport Cat from './Cat';\nimport Dog from './Dog';\n\nclass App extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tcatPictureURL: [],\n\t\t\tdogPictureURL: [],\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.loadPictures();\n\t}\n\n\tloadPictures() {\n\n\t\tfetch('https://aws.random.cat/meow')\n\t\t\t.then(res => res.json())\n\t\t\t.then(json => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tcatPictureURL: json.file,\n\t\t\t\t});\n\t\t\t});\n\n\t\tlet found = false;\n\t\tfor (let i = 0; i < 10; i++) {\n\t\t\tif (found) break;\n\n\t\t\tfetch('https://random.dog/woof.json')\n\t\t\t\t.then(res => res.json())\n\t\t\t\t.then(json => {\n\t\t\t\t\tvar imgType = json.url.substring(json.url.length - 4, json.url.length).toLowerCase();\n\t\t\t\t\tif (imgType === \".jpg\" || imgType === \".png\") {\n\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\tdogPictureURL: json.url,\n\t\t\t\t\t\t});\n\t\t\t\t\t\tfound = true;\n\t\t\t\t\t\tconsole.log(i);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t}\n\t}\n\n\trender() {\n\t\tvar { catPictureURL, dogPictureURL } = this.state;\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<Cat picture={catPictureURL} />\n\t\t\t\t<Dog picture={dogPictureURL} />\n\t\t\t</>\n\t\t);\n\t}\n\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}