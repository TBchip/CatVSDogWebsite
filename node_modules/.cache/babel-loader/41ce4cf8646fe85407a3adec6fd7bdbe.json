{"ast":null,"code":"var _jsxFileName = \"D:\\\\code\\\\Web\\\\react-tutorial\\\\src\\\\App.js\";\nimport React, { useState, useRef } from 'react';\nimport TodoList from './TodoList';\n\nfunction App() {\n  const [todos, setTodos] = useState([]);\n  const todoNameRef = useRef();\n\n  function handleAddTodo(e) {\n    const name = todoNameRef.current.value;\n    if (name == \"\") return;\n    setTodos(prevTodos => {\n      return [...prevTodos, {\n        id: 1,\n        name: name\n      }];\n    });\n    todoNameRef.current.value = null;\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TodoList, {\n    todos: todos,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    ref: todoNameRef,\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleAddTodo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, \" Add Todo\"), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, \"Clear Completed\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, \"0 left to do\"));\n}\n\nexport default App;","map":{"version":3,"sources":["D:/code/Web/react-tutorial/src/App.js"],"names":["React","useState","useRef","TodoList","App","todos","setTodos","todoNameRef","handleAddTodo","e","name","current","value","prevTodos","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAMM,WAAW,GAAGL,MAAM,EAA1B;;AAEA,WAASM,aAAT,CAAuBC,CAAvB,EAA0B;AACxB,UAAMC,IAAI,GAAGH,WAAW,CAACI,OAAZ,CAAoBC,KAAjC;AACA,QAAIF,IAAI,IAAI,EAAZ,EAAgB;AAChBJ,IAAAA,QAAQ,CAACO,SAAS,IAAG;AACnB,aAAO,CAAC,GAAGA,SAAJ,EAAe;AAACC,QAAAA,EAAE,EAAC,CAAJ;AAAOJ,QAAAA,IAAI,EAACA;AAAZ,OAAf,CAAP;AACD,KAFO,CAAR;AAGAH,IAAAA,WAAW,CAACI,OAAZ,CAAoBC,KAApB,GAA4B,IAA5B;AACD;;AAED,sBACE,uDACE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEP,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAO,IAAA,GAAG,EAAEE,WAAZ;AAAyB,IAAA,IAAI,EAAC,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE;AAAQ,IAAA,OAAO,EAAEC,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALF,CADF;AASD;;AAED,eAAeJ,GAAf","sourcesContent":["import React, { useState, useRef } from 'react';\nimport TodoList from './TodoList';\n\nfunction App() {\n  const [todos, setTodos] = useState([]);\n  const todoNameRef = useRef();\n\n  function handleAddTodo(e) {\n    const name = todoNameRef.current.value;\n    if (name == \"\") return;\n    setTodos(prevTodos =>{\n      return [...prevTodos, {id:1, name:name}]\n    })\n    todoNameRef.current.value = null;\n  }\n\n  return (\n    <>\n      <TodoList todos={todos} />\n      <input ref={todoNameRef} type=\"text\" />\n      <button onClick={handleAddTodo}> Add Todo</button>\n      <button>Clear Completed</button>\n      <div>0 left to do</div>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}